---
import JavaIcon from "./icons/JavaIcon.astro";
import SpringBootIcon from "./icons/SpringBootIcon.astro";
import MySQLIcon from "./icons/MySQLIcon.astro";
import LinkButton from "./LinkButton.astro";
import GithubIcon from "./icons/GithubIcon.astro";
import LinkIcon from "./icons/LinkIcon.astro";
import IntelliJIcon from "./icons/IntelliJIcon.astro";

const TAGS = {
  JAVA: {
    name: "Java",
    class: "bg-black text-white",
    icon: JavaIcon,
  },
  SpringBoot: {
    name: "Spring Boot",
    class: "bg-[#003159] text-white",
    icon: SpringBootIcon,
  },
  MySQL: {
    name: "MySQL",
    class: "bg-[#00758F] text-white",
    icon: MySQLIcon,
  },
  IntelliJ: {
    name: "IntelliJ IDEA",
    class: "bg-[#00758F] text-white",
    icon: IntelliJIcon,
  },
};

const PROJECTS = [
  {
    title: "Gestor de Tareas con Spring Boot y MySQL",
    description:
      "Este proyecto es una API RESTful desarrollada en Spring Boot y Java 17, diseñada para facilitar la gestión eficiente de tareas diarias. Incorpora funcionalidades como autenticación segura de usuarios, gestión de tareas por estado y prioridad, asignación de etiquetas para una mejor organización, y notificaciones de recordatorios. Utiliza Spring Security para robustecer la seguridad y Spring Data JPA para la interacción con una base de datos MySQL, asegurando una gestión eficiente y segura de los datos.",
    link: "",
    github: "https://github.com/dacm1999/API-Rest-SpringBoot-MySQL-TaskManager",
    image: "/projects/spring-jpa-mysql2-large.webp",
    tags: [TAGS.JAVA, TAGS.SpringBoot, TAGS.MySQL, TAGS.IntelliJ],
  },
];
---

{
  PROJECTS.map(({ image, title, description, tags }) => (
    <>
      <article class="relative mt-16">
        <h3 class="text-2xl font-semibold text-yellow-200 mb-2">{title}</h3>
        <p class="text-lg mb-2 text-pretty text-white justify-center">
          {description}
        </p>
        <ul class="flex gap-x-4 flex-row mb-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>
      </article>
      <img
        class="rounded shadow-2xl shadow-white/10"
        src={image}
        alt={"Captura de pantalla del proyecto ${image}"}
      />
    </>
  ))
}
